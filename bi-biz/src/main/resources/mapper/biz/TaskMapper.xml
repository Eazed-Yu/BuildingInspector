<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.whut.cs.bi.biz.mapper.TaskMapper">

    <resultMap type="Task" id="TaskResult">
        <result property="id"    column="id"    />
        <result property="projectId" column="project_id"/>
        <result property="buildingId" column="building_id"/>
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />

        <!-- 关联建筑对象 -->
        <association property="building" javaType="Building">
            <id     property="id"      column="building_id"/>
            <result property="name"    column="building_name"/>
            <result property="rootObjectId" column="root_object_id"/>
            <result property="rootPropertyId" column="root_property_id"/>
        </association>

        <!-- 关联项目对象 -->
        <association property="project" javaType="Project">
            <id     property="id"       column="project_id"/>
            <result property="name" column="project_name"/>
            <result property="code" column="project_code"/>
            <result property="startDate" column="project_start_date"/>
            <result property="endDate" column="project_end_date"/>
            <result property="year" column="project_year"/>
        </association>
    </resultMap>

    <sql id="selectTaskVo">
        select
            t.id,
            t.project_id,
            t.building_id,
            t.status,
            t.remark,
            t.create_by,
            t.create_time,
            t.update_by,
            t.update_time,
            <!-- 建筑表字段 -->
            b.id as building_id,
            b.name as building_name,
            b.root_object_id as root_object_id,
            b.root_property_id as root_property_id,
            <!-- 项目表字段 -->
            p.id as project_id,
            p.name as project_name,
            p.code as project_code,
            p.year as project_year,
            p.start_date as project_start_date,
            p.end_date as project_end_date
        from bi_task t
        left join bi_building b on t.building_id = b.id
        left join bi_project p on t.project_id = p.id
    </sql>


    <select id="selectTaskList" parameterType="Task" resultMap="TaskResult">
        <include refid="selectTaskVo"/>
        <where>
            <if test="buildingId != null"> and t.building_id = #{buildingId}</if>
            <if test="projectId != null"> and t.project_id = #{projectId}</if>
            <if test="status != null and status != ''"> and t.status = #{status}</if>

            <!-- 建筑表条件 -->
            <if test="building != null">
                <if test="building.name != null and building.name != ''">
                    and b.name like concat('%', #{building.name}, '%')
                </if>
            </if>

            <!-- 项目表条件 -->
            <if test="project != null">
                <if test="project.name != null and project.name != ''">
                    and p.name like concat('%', #{project.name}, '%')
                </if>
                <if test="project.code != null and project.code != ''">
                    and p.code = #{project.code}
                </if>
                <if test="project.year != null">
                    and p.year = #{project.year}
                </if>
                <if test="project.startDate != null">
                    and p.start_date &gt;= #{project.startDate}
                </if>
                <if test="project.endDate != null">
                    and p.end_date &lt;= #{project.endDate}
                </if>
            </if>
        </where>
    </select>

    <select id="selectTaskById" parameterType="Long" resultMap="TaskResult">
        <include refid="selectTaskVo"/>
        where t.id = #{id}
    </select>

    <insert id="insertTask" parameterType="Task" useGeneratedKeys="true" keyProperty="id">
        insert into bi_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectId != null">project_id,</if>
            <if test="buildingId != null">building_id,</if>
            <if test="status != null">status,</if>
            <if test="remark != null and remark != ''">remark,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null and updateBy != ''">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectId != null">#{projectId},</if>
            <if test="buildingId != null">#{buildingId},</if>
            <if test="status != null">#{status},</if>
            <if test="remark != null and remark != ''">#{remark},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <insert id="batchInsertTask">
        insert into bi_task (
            project_id,
            building_id,
            create_by
        ) values
        <foreach collection="buildingIds" item="buildingId" separator=",">
            (
            #{projectId},
            #{buildingId},
            #{loginName}
            )
        </foreach>
    </insert>

    <update id="updateTask" parameterType="Task">
        update bi_task
        <trim prefix="SET" suffixOverrides=",">
            <if test="projectId != null">project_id = #{projectId},</if>
            <if test="buildingId != null">building_id = #{buildingId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateTaskStatus" parameterType="Task">
        update bi_task
        <trim prefix="SET" suffixOverrides=",">

            <if test="status != null">status = #{status},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTaskById" parameterType="Long">
        delete from bi_task where id = #{id}
    </delete>

    <delete id="deleteTaskByIds" parameterType="String">
        delete from bi_task where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteTaskByProjectIdAndBuildingId">
        DELETE FROM bi_task
        WHERE project_id = #{projectId}
          AND building_id = #{buildingId}
    </delete>

    <delete id="batchDeleteTaskByProjectIdAndBuildingIds">
        DELETE FROM bi_task
        WHERE project_id = #{projectId}
          AND building_id IN
        <foreach item="buildingId" collection="buildingIds" open="(" separator="," close=")">
            #{buildingId}
        </foreach>
    </delete>

</mapper>